generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  username        String   @unique
  email           String   @unique
  password        String
  createdAt       DateTime @default(now())
	monitorLimit    Int? @default(10)
	statusPageLimit Int? @default(1)

  monitors    Monitor[]
  statusPages StatusPage[]
}

model Monitor {
  id         String      @id @default(uuid())
  userId     String
  name       String
  url        String
  createdAt  DateTime    @default(now())
  heartbeats Heartbeat[]

  user       User                @relation(fields: [userId], references: [id])
  statusPage StatusPageMonitor[]
}

model Heartbeat {
  id           String   @id @default(uuid())
  monitorId    String
  status       String // "up" or "down"
  responseTime Int? // in ms
  responseCode Int? // response code
  errorMessage String? // error message if any
  createdAt    DateTime @default(now())

  monitor Monitor @relation(fields: [monitorId], references: [id])
}

model StatusPage {
  id          String   @id @default(uuid())
  userId      String
  slug        String   @unique
  title       String
  description String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User                @relation(fields: [userId], references: [id])
  monitors StatusPageMonitor[]
}

model StatusPageMonitor {
  id           String @id @default(uuid())
  statusPageId String
  monitorId    String
	position     Int

  statusPage StatusPage @relation(fields: [statusPageId], references: [id])
  monitor    Monitor    @relation(fields: [monitorId], references: [id])

  @@unique([statusPageId, monitorId], name: "unique_status_page_monitor")
}
